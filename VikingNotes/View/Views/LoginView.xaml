<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:View.Views"
        xmlns:ViewModels="clr-namespace:ViewModels;assembly=ViewModels" x:Class="View.Views.LoginView"
        xmlns:models="clr-namespace:RESTfullWebApi.Models;assembly=RESTfullWebApi"
        mc:Ignorable="d"
        Title="Login" Height="450" Width="800">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">
                            <TextBlock DockPanel.Dock="Right" Foreground="Red" FontSize="14"
                                FontWeight="Bold" ToolTip="{Binding ElementName=adornerPlaceholder,
                                Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">*</TextBlock>
                            <Border BorderBrush="Red" BorderThickness="2">
                                <AdornedElementPlaceholder Name="adornerPlaceholder">
                                </AdornedElementPlaceholder>
                            </Border>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Grid Background="AliceBlue">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>


        <Label Grid.Column="1" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Kursist num." FontSize="20" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>
        <Label Grid.Column="1" Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Username" FontSize="20"/>
        <Label Grid.Column="1" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Password" FontSize="20"/>
        <Label Grid.Column="1" Grid.Row="4" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Re-Password" FontSize="20" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>
        <Label Grid.Column="1" Grid.Row="5" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Email" FontSize="20" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>
        <Label Grid.Column="1" Grid.Row="6" HorizontalAlignment="Center" VerticalAlignment="Center" Content="Studie" FontSize="20" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>

        <CheckBox Grid.Column="4" Grid.Row="1" VerticalAlignment="Bottom" Content="Registrer" Margin="20,0,0,0" FontSize="20" IsChecked="{Binding IsRegistrering}" Command="{Binding CheckBoxClick}"/>

        <TextBox Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Margin="10,10,10,10" FontSize="15" Text="{Binding StudyID, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>
        <TextBox Grid.Column="2" Grid.Row="2" Grid.ColumnSpan="2" Margin="10,10,10,10" FontSize="15" >
            <TextBox.Text>
                <Binding Path="Username" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
            <TextBox Grid.Column="2" Grid.Row="3" Grid.ColumnSpan="2" Margin="10,10,10,10" FontSize="15" Text="{Binding Password, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"/>
        <TextBox Grid.Column="2" Grid.Row="4" Grid.ColumnSpan="2" Margin="10,10,10,10" FontSize="15" Text="{Binding RePassword, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>
        <TextBox Grid.Column="2" Grid.Row="5" Grid.ColumnSpan="2" Margin="10,10,10,10" FontSize="15" Text="{Binding Email, UpdateSourceTrigger=PropertyChanged, ValidatesOnExceptions=True, NotifyOnValidationError=True}"  Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}"/>
        <ComboBox Grid.Column="2" Grid.Row="6" Grid.ColumnSpan="2" Margin="10,10,10,10" FontSize="15" ItemsSource="{Binding StudyList}" SelectedItem="{Binding Study, UpdateSourceTrigger=PropertyChanged}" Visibility="{Binding Path=IsRegistrering, Converter={StaticResource BoolToVis}}">
            <ComboBox.ItemTemplate>
                <DataTemplate DataType="models:Study">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}" />
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
        </ComboBox>

            <Button Grid.Column="4" Grid.Row="7" Margin="10,10,10,10" Content="{Binding ButtonContent, UpdateSourceTrigger=PropertyChanged}" FontSize="18" Command="{Binding ButtonClick}"/>
    </Grid>

</Window>
