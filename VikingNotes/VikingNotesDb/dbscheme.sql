--
-- Target: Microsoft SQL Server 
-- Syntax: isql /Uuser /Ppassword /Sserver -i\path\filename.sql
-- Date  : Nov 24 2018 18:15
-- Script Generated by Database Design Studio 2.21.3 
--


--
-- Select Database: 'db_name'
--
USE db_name
GO
 
IF DB_NAME() = 'db_name'
    RAISERROR('''db_name'' DATABASE CONTEXT NOW IN USE.',1,1)
ELSE
    RAISERROR('ERROR IN BATCH FILE, ''USE db_name'' FAILED!  KILLING THE SPID NOW.',22,127) WITH LOG
 
GO
EXECUTE SP_DBOPTION 'db_name' ,'TRUNC. LOG ON CHKPT.' ,'TRUE'
GO

--
-- Create Table    : 'Catagory'   
-- CatagoryID      :  
-- Name            :  
--
CREATE TABLE Catagory (
    CatagoryID     BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Name           NVARCHAR(300) NOT NULL UNIQUE,
CONSTRAINT pk_Catagory PRIMARY KEY CLUSTERED (CatagoryID))
GO

--
-- Create Table    : 'UserType'   
-- UserTypeID      :  
-- Type            :  
--
CREATE TABLE UserType (
    UserTypeID     BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Type           NVARCHAR(100) NOT NULL UNIQUE,
CONSTRAINT pk_UserType PRIMARY KEY CLUSTERED (UserTypeID))
GO

--
-- Create Table    : 'Faculty'   
-- FacultyID       :  
-- Name            :  
--
CREATE TABLE Faculty (
    FacultyID      BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Name           NVARCHAR(300) NOT NULL UNIQUE,
CONSTRAINT pk_Faculty PRIMARY KEY CLUSTERED (FacultyID))
GO

--
-- Create Table    : 'Study'   
-- StudyID         :  
-- Name            :  
-- FacultyID       :  (references Faculty.FacultyID)
--
CREATE TABLE Study (
    StudyID        BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Name           NVARCHAR(100) NOT NULL UNIQUE,
    FacultyID      BIGINT NOT NULL,
CONSTRAINT pk_Study PRIMARY KEY CLUSTERED (StudyID),
CONSTRAINT fk_Study FOREIGN KEY (FacultyID)
    REFERENCES Faculty (FacultyID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Semester'   
-- SemesterID      :  
-- SemesterNumber  :  
-- StudyID         :  (references Study.StudyID)
--
CREATE TABLE Semester (
    SemesterID     BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    SemesterNumber NVARCHAR(5) NOT NULL,
    StudyID        BIGINT NOT NULL,
CONSTRAINT pk_Semester PRIMARY KEY CLUSTERED (SemesterID),
CONSTRAINT fk_Semester FOREIGN KEY (StudyID)
    REFERENCES Study (StudyID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Course'   
-- CourseID        :  
-- Name            :  
-- SemesterID      :  (references Semester.SemesterID)
--
CREATE TABLE Course (
    CourseID       BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Name           NVARCHAR(300) NOT NULL UNIQUE,
    SemesterID     BIGINT NOT NULL,
CONSTRAINT pk_Course PRIMARY KEY CLUSTERED (CourseID),
CONSTRAINT fk_Course FOREIGN KEY (SemesterID)
    REFERENCES Semester (SemesterID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'IsPartOfMany'   
-- CourseID        :  (references Course.CourseID)
-- CatagoryID      :  (references Catagory.CatagoryID)
--
CREATE TABLE IsPartOfMany (
    CourseID       BIGINT NOT NULL,
    CatagoryID     BIGINT NOT NULL,
CONSTRAINT pk_IsPartOfMany PRIMARY KEY CLUSTERED (CourseID,CatagoryID),
CONSTRAINT fk_IsPartOfMany FOREIGN KEY (CourseID)
    REFERENCES Course (CourseID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
CONSTRAINT fk_IsPartOfMany2 FOREIGN KEY (CatagoryID)
    REFERENCES Catagory (CatagoryID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Userr'   
-- UserID          :  
-- UserName        :  
-- Password        :  
-- EmailAdress     :  
-- UserTypeID      :  (references UserType.UserTypeID)
-- StudyID         :  (references Study.StudyID)
-- StudentNumber   :  
-- AuthToken       :  
-- Salt            :  
--
CREATE TABLE Userr (
    UserID         BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    UserName       NVARCHAR(100) NOT NULL UNIQUE,
    Password       NVARCHAR(256) NOT NULL,
    EmailAdress    NVARCHAR(50) NOT NULL UNIQUE,
    UserTypeID     BIGINT NOT NULL,
    StudyID        BIGINT NOT NULL,
    StudentNumber  NVARCHAR(20) NOT NULL UNIQUE,
    AuthToken      NVARCHAR(100) NOT NULL,
    Salt           NVARCHAR(20) NOT NULL,
CONSTRAINT pk_Userr PRIMARY KEY CLUSTERED (UserID),
CONSTRAINT fk_Userr FOREIGN KEY (UserTypeID)
    REFERENCES UserType (UserTypeID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_Userr2 FOREIGN KEY (StudyID)
    REFERENCES Study (StudyID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Quiz'   
-- QuizID          :  
-- UserID          :  (references Userr.UserID)
-- Name            :  
-- Description     :  
-- CatagoryID      :  (references Catagory.CatagoryID)
--
CREATE TABLE Quiz (
    QuizID         BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    UserID         BIGINT NOT NULL,
    Name           NVARCHAR(100) NOT NULL,
    Description    NVARCHAR(1000) NULL,
    CatagoryID     BIGINT NOT NULL,
CONSTRAINT pk_Quiz PRIMARY KEY CLUSTERED (QuizID),
CONSTRAINT fk_Quiz FOREIGN KEY (UserID)
    REFERENCES Userr (UserID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
CONSTRAINT fk_Quiz2 FOREIGN KEY (CatagoryID)
    REFERENCES Catagory (CatagoryID)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Question'   
-- QuestionID      :  
-- Question        :  
-- QuizID          :  (references Quiz.QuizID)
-- WrongCount      :  
-- CorrectCount    :  
--
CREATE TABLE Question (
    QuestionID     BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Question       NVARCHAR(1000) NOT NULL,
    QuizID         BIGINT NOT NULL,
    WrongCount     BIGINT NOT NULL,
    CorrectCount   BIGINT NOT NULL,
CONSTRAINT pk_Question PRIMARY KEY CLUSTERED (QuestionID),
CONSTRAINT fk_Question FOREIGN KEY (QuizID)
    REFERENCES Quiz (QuizID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Answer'   
-- AnswerID        :  
-- Answer          :  
-- IsCorrect       :  
-- QuestionID      :  (references Question.QuestionID)
--
CREATE TABLE Answer (
    AnswerID       BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Answer         NVARCHAR(500) NOT NULL,
    IsCorrect      CHAR(1) NOT NULL,
    QuestionID     BIGINT NOT NULL,
CONSTRAINT pk_Answer PRIMARY KEY CLUSTERED (AnswerID),
CONSTRAINT fk_Answer FOREIGN KEY (QuestionID)
    REFERENCES Question (QuestionID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'Rating'   
-- RatingID        :  
-- Rating          :  
-- Reason          :  
-- QuizID          :  (references Quiz.QuizID)
--
CREATE TABLE Rating (
    RatingID       BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    Rating         INT NOT NULL,
    Reason         NVARCHAR(1000) NOT NULL,
    QuizID         BIGINT NOT NULL,
CONSTRAINT pk_Rating PRIMARY KEY CLUSTERED (RatingID),
CONSTRAINT fk_Rating FOREIGN KEY (QuizID)
    REFERENCES Quiz (QuizID)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'QuizUserStatistic'   
-- QuizUserStatisticID :  
-- correctPercentage :  
-- QuizID          :  (references Quiz.QuizID)
-- UserID          :  (references Userr.UserID)
--
CREATE TABLE QuizUserStatistic (
    QuizUserStatisticID BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    correctPercentage INT NOT NULL,
    QuizID         BIGINT NOT NULL,
    UserID         BIGINT NULL,
CONSTRAINT pk_QuizUserStatistic PRIMARY KEY CLUSTERED (QuizUserStatisticID),
CONSTRAINT fk_QuizUserStatistic FOREIGN KEY (QuizID)
    REFERENCES Quiz (QuizID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_QuizUserStatistic2 FOREIGN KEY (UserID)
    REFERENCES Userr (UserID)
    ON UPDATE CASCADE)
GO

--
-- Create Table    : 'SelectedAnswer'   
-- SelectedAnswerID :  
-- IsSelectedCorrect :  
-- QuestionID      :  (references Question.QuestionID)
-- QuizUserStatisticID :  (references QuizUserStatistic.QuizUserStatisticID)
--
CREATE TABLE SelectedAnswer (
    SelectedAnswerID BIGINT IDENTITY(1,1) NOT NULL UNIQUE,
    IsSelectedCorrect CHAR(1) NOT NULL,
    QuestionID     BIGINT NOT NULL,
    QuizUserStatisticID BIGINT NULL,
CONSTRAINT pk_SelectedAnswer PRIMARY KEY CLUSTERED (SelectedAnswerID),
CONSTRAINT fk_SelectedAnswer FOREIGN KEY (QuestionID)
    REFERENCES Question (QuestionID)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
CONSTRAINT fk_SelectedAnswer2 FOREIGN KEY (QuizUserStatisticID)
    REFERENCES QuizUserStatistic (QuizUserStatisticID)
    ON UPDATE CASCADE)
GO

--
-- Permissions for: 'public'
--
GRANT ALL ON Catagory TO public
GO
GRANT ALL ON UserType TO public
GO
GRANT ALL ON Faculty TO public
GO
GRANT ALL ON Study TO public
GO
GRANT ALL ON Semester TO public
GO
GRANT ALL ON Course TO public
GO
GRANT ALL ON IsPartOfMany TO public
GO
GRANT ALL ON Userr TO public
GO
GRANT ALL ON Quiz TO public
GO
GRANT ALL ON Question TO public
GO
GRANT ALL ON Answer TO public
GO
GRANT ALL ON Rating TO public
GO
GRANT ALL ON QuizUserStatistic TO public
GO
GRANT ALL ON SelectedAnswer TO public
GO

